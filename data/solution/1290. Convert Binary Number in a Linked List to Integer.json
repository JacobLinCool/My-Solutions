{"name":"1290. Convert Binary Number in a Linked List to Integer","solutions":{"c":"int getDecimalValue(struct ListNode* head) {\n    long long result = 0;\n    while (head) {\n        result <<= 1;\n        result += head->val;\n        head = head->next;\n    }\n    return result;\n}","cpp":"class Solution {\npublic:\n    int getDecimalValue(ListNode* head) {\n        long long result = 0;\n        while (head) {\n            result <<= 1;\n            result += head->val;\n            head = head->next;\n        }\n        return result;\n    }\n};","java":"class Solution {\n    public int getDecimalValue(ListNode head) {\n        var result = 0;\n        \n        while (head != null) {\n            result <<= 1;\n            result += head.val;\n            head = head.next;\n        }\n        return result;\n    }\n}","javascript":"function getDecimalValue(head) {\n    let result = 0;\n    while (head) {\n        result <<= 1;\n        result += head.val;\n        head = head.next;\n    }\n    return result;\n}\n","php":"class Solution {\n\n/**\n * @param ListNode $head\n * @return Integer\n */\nfunction getDecimalValue($head) {\n    $result = 0;\n    \n    while ($head != null) {\n        $result <<= 1;\n        $result += $head->val;\n        $head = $head->next;\n    }\n    return $result;\n}\n}","python":"class Solution:\n    def getDecimalValue(self, head: ListNode) -> int:\n        result = 0\n        \n        while head != None:\n            result <<= 1\n            result += head.val\n            head = head.next\n        \n        return result","typescript":"function getDecimalValue(head: ListNode | null): number {\n    let result = 0;\n    while (head !== null) {\n        result <<= 1;\n        result += head.val;\n        head = head.next;\n    }\n    return result;\n}\n"},"title":"1290. Convert Binary Number in a Linked List to Integer","tags":["leetcode","linked-list","math"],"raw":"\n[LeetCode 1290. Convert Binary Number in a Linked List to Integer](https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/)\n\n# 想法\n\n這一題我們先用一變數來存放之前的值，每向前一位，就將原值向左移一位（乘以 2），並且加上新的值。\n\n\n# Solution\n\n## C\n\n```c\nint getDecimalValue(struct ListNode* head) {\n    long long result = 0;\n    while (head) {\n        result <<= 1;\n        result += head->val;\n        head = head->next;\n    }\n    return result;\n}\n```\n\n## CPP\n\n```cpp\nclass Solution {\npublic:\n    int getDecimalValue(ListNode* head) {\n        long long result = 0;\n        while (head) {\n            result <<= 1;\n            result += head->val;\n            head = head->next;\n        }\n        return result;\n    }\n};\n```\n\n## JAVA\n\n```java\nclass Solution {\n    public int getDecimalValue(ListNode head) {\n        var result = 0;\n        \n        while (head != null) {\n            result <<= 1;\n            result += head.val;\n            head = head.next;\n        }\n        return result;\n    }\n}\n```\n\n## JAVASCRIPT\n\n```javascript\nfunction getDecimalValue(head) {\n    let result = 0;\n    while (head) {\n        result <<= 1;\n        result += head.val;\n        head = head.next;\n    }\n    return result;\n}\n\n```\n\n## PHP\n\n```php\nclass Solution {\n\n/**\n * @param ListNode $head\n * @return Integer\n */\nfunction getDecimalValue($head) {\n    $result = 0;\n    \n    while ($head != null) {\n        $result <<= 1;\n        $result += $head->val;\n        $head = $head->next;\n    }\n    return $result;\n}\n}\n```\n\n## PYTHON\n\n```python\nclass Solution:\n    def getDecimalValue(self, head: ListNode) -> int:\n        result = 0\n        \n        while head != None:\n            result <<= 1\n            result += head.val\n            head = head.next\n        \n        return result\n```\n\n## TYPESCRIPT\n\n```typescript\nfunction getDecimalValue(head: ListNode | null): number {\n    let result = 0;\n    while (head !== null) {\n        result <<= 1;\n        result += head.val;\n        head = head.next;\n    }\n    return result;\n}\n\n```","content":"<p><a href=\"https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/\">LeetCode 1290. Convert Binary Number in a Linked List to Integer</a></p>\n<h1 id=\"%E6%83%B3%E6%B3%95\" tabindex=\"-1\">想法</h1>\n<p>這一題我們先用一變數來存放之前的值，每向前一位，就將原值向左移一位（乘以 2），並且加上新的值。</p>\n<h1 id=\"solution\" tabindex=\"-1\">Solution</h1>\n<h2 id=\"c\" tabindex=\"-1\">C</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">struct</span><span style=\"color: #D8DEE9FF\"> ListNode</span><span style=\"color: #81A1C1\">*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">long</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">long</span><span style=\"color: #D8DEE9FF\"> result </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        result </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        result </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #81A1C1\">-&gt;</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        head </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #81A1C1\">-&gt;</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"cpp\" tabindex=\"-1\">CPP</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Solution</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #81A1C1\">public</span><span style=\"color: #ECEFF4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">ListNode</span><span style=\"color: #81A1C1\">*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">long</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">long</span><span style=\"color: #D8DEE9FF\"> result </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">-&gt;</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            head </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">-&gt;</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"java\" tabindex=\"-1\">JAVA</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Solution</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">public</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #8FBCBB\">ListNode</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #8FBCBB\">var</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">head </span><span style=\"color: #81A1C1\">!=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">null</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            head </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"javascript\" tabindex=\"-1\">JAVASCRIPT</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">let</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> (</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"php\" tabindex=\"-1\">PHP</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Solution</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #616E88\">/**</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> * </span><span style=\"color: #81A1C1\">@param</span><span style=\"color: #616E88\"> </span><span style=\"color: #8FBCBB\">ListNode</span><span style=\"color: #616E88\"> $head</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> * </span><span style=\"color: #81A1C1\">@return</span><span style=\"color: #616E88\"> </span><span style=\"color: #8FBCBB\">Integer</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> */</span></span>\n<span class=\"line\"><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">!=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">null</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #81A1C1\">-&gt;</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #81A1C1\">-&gt;</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"python\" tabindex=\"-1\">PYTHON</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">class</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Solution</span><span style=\"color: #ECEFF4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">def</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">self</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">:</span><span style=\"color: #D8DEE9FF\"> ListNode</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">-&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">int</span><span style=\"color: #ECEFF4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        result </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> head </span><span style=\"color: #81A1C1\">!=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">None</span><span style=\"color: #ECEFF4\">:</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            result </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9FF\">val</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            head </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9FF\">next</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"typescript\" tabindex=\"-1\">TYPESCRIPT</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">getDecimalValue</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">ListNode</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">null</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">:</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">number</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">let</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> (</span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">!==</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">null</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;&lt;=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">+=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">val</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">head</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #D8DEE9\">next</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n"}