{"name":"1. Two Sum","solutions":{"c":"int* twoSum(int* nums, int nums_size, int target, int* return_size) {\n    int* result = (int*)malloc(sizeof(int) * 2);\n    int i, j;\n    for (i = 0; i < nums_size; i++) {\n        for (j = i + 1; j < nums_size; j++) {\n            if (nums[i] + nums[j] == target) {\n                result[0] = i;\n                result[1] = j;\n                *return_size = 2;\n                return result;\n            }\n        }\n    }\n    return result;\n}","javascript":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nfunction twoSum(nums, target) {\n    const m = new Map();\n    for (const i in nums) {\n        if (m.has(nums[i])) return [m.get(nums[i]), i];\n        m.set(target - nums[i], i);\n    }\n}\n"},"title":"1. Two Sum","tags":["leetcode","array","two-sum"],"content":"<p><a href=\"https://leetcode.com/problems/two-sum/\">LeetCode 1. Two Sum</a></p>\n<h1 id=\"thought\" tabindex=\"-1\">Thought</h1>\n<h2 id=\"first-approach%3A-brute-force\" tabindex=\"-1\">First Approach: Brute Force</h2>\n<p>Complecity:</p>\n<p>$$\nO(n^2)\n$$</p>\n<p>Just use 2 for loops to iterate over the array and check if the sum is equal to the target.</p>\n<h2 id=\"second-approach%3A-map\" tabindex=\"-1\">Second Approach: Map</h2>\n<p>Complecity: $O(n)$</p>\n<p>Use a map to store <code>diff_between:index</code>. If we find the diff in the map, we have found the pair.</p>\n<h1 id=\"solution\" tabindex=\"-1\">Solution</h1>\n<h2 id=\"c\" tabindex=\"-1\">C</h2>\n<pre><code class=\"language-c\">int* twoSum(int* nums, int nums_size, int target, int* return_size) {\n    int* result = (int*)malloc(sizeof(int) * 2);\n    int i, j;\n    for (i = 0; i &lt; nums_size; i++) {\n        for (j = i + 1; j &lt; nums_size; j++) {\n            if (nums[i] + nums[j] == target) {\n                result[0] = i;\n                result[1] = j;\n                *return_size = 2;\n                return result;\n            }\n        }\n    }\n    return result;\n}\n</code></pre>\n<h2 id=\"javascript\" tabindex=\"-1\">JAVASCRIPT</h2>\n<pre><code class=\"language-javascript\">/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nfunction twoSum(nums, target) {\n    const m = new Map();\n    for (const i in nums) {\n        if (m.has(nums[i])) return [m.get(nums[i]), i];\n        m.set(target - nums[i], i);\n    }\n}\n\n</code></pre>\n"}