{"name":"1. Two Sum","solutions":{"c":"int* twoSum(int* nums, int nums_size, int target, int* return_size) {\n    int* result = (int*)malloc(sizeof(int) * 2);\n    int i, j;\n    for (i = 0; i < nums_size; i++) {\n        for (j = i + 1; j < nums_size; j++) {\n            if (nums[i] + nums[j] == target) {\n                result[0] = i;\n                result[1] = j;\n                *return_size = 2;\n                return result;\n            }\n        }\n    }\n    return result;\n}","javascript":"/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nfunction twoSum(nums, target) {\n    const m = new Map();\n    for (const i in nums) {\n        if (m.has(nums[i])) return [m.get(nums[i]), i];\n        m.set(target - nums[i], i);\n    }\n}\n"},"title":"1. Two Sum","tags":["leetcode","array","two-sum"],"raw":"\n[LeetCode 1. Two Sum](https://leetcode.com/problems/two-sum/)\n\n# Thought\n\n## First Approach: Brute Force\n\nComplecity: $O(n^2)$\n\nJust use 2 for loops to iterate over the array and check if the sum is equal to the target.\n\n## Second Approach: Map\n\nComplecity: $O(n)$\n\nUse a map to store `diff_between:index`. If we find the diff in the map, we have found the pair.\n\n\n# Solution\n\n## C\n\n```c\nint* twoSum(int* nums, int nums_size, int target, int* return_size) {\n    int* result = (int*)malloc(sizeof(int) * 2);\n    int i, j;\n    for (i = 0; i < nums_size; i++) {\n        for (j = i + 1; j < nums_size; j++) {\n            if (nums[i] + nums[j] == target) {\n                result[0] = i;\n                result[1] = j;\n                *return_size = 2;\n                return result;\n            }\n        }\n    }\n    return result;\n}\n```\n\n## JAVASCRIPT\n\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nfunction twoSum(nums, target) {\n    const m = new Map();\n    for (const i in nums) {\n        if (m.has(nums[i])) return [m.get(nums[i]), i];\n        m.set(target - nums[i], i);\n    }\n}\n\n```","content":"<p><a href=\"https://leetcode.com/problems/two-sum/\">LeetCode 1. Two Sum</a></p>\n<h1 id=\"thought\" tabindex=\"-1\">Thought</h1>\n<h2 id=\"first-approach%3A-brute-force\" tabindex=\"-1\">First Approach: Brute Force</h2>\n<p>Complecity: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.8141079999999999em;\"></span><span class=\"strut bottom\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">n</span><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle uncramped\"><span class=\"mord mathrm\">2</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>Just use 2 for loops to iterate over the array and check if the sum is equal to the target.</p>\n<h2 id=\"second-approach%3A-map\" tabindex=\"-1\">Second Approach: Map</h2>\n<p>Complecity: <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding=\"application/x-tex\">O(n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathit\">n</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>Use a map to store <code>diff_between:index</code>. If we find the diff in the map, we have found the pair.</p>\n<h1 id=\"solution\" tabindex=\"-1\">Solution</h1>\n<h2 id=\"c\" tabindex=\"-1\">C</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #81A1C1\">int*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">twoSum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">int*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">nums_size</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">target</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">int*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">return_size</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">int*</span><span style=\"color: #D8DEE9FF\"> result </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">int*</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #88C0D0\">malloc</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">sizeof</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #81A1C1\">int</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">*</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">2</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">int</span><span style=\"color: #D8DEE9FF\"> i</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> j</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">for</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">i </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">0</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> i </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\"> nums_size</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> i</span><span style=\"color: #81A1C1\">++</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">for</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">j </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> i </span><span style=\"color: #81A1C1\">+</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">1</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> j </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\"> nums_size</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> j</span><span style=\"color: #81A1C1\">++</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #81A1C1\">if</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9FF\">nums</span><span style=\"color: #ECEFF4\">[</span><span style=\"color: #D8DEE9FF\">i</span><span style=\"color: #ECEFF4\">]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">+</span><span style=\"color: #D8DEE9FF\"> nums</span><span style=\"color: #ECEFF4\">[</span><span style=\"color: #D8DEE9FF\">j</span><span style=\"color: #ECEFF4\">]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">==</span><span style=\"color: #D8DEE9FF\"> target</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">                result</span><span style=\"color: #ECEFF4\">[</span><span style=\"color: #B48EAD\">0</span><span style=\"color: #ECEFF4\">]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> i</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">                result</span><span style=\"color: #ECEFF4\">[</span><span style=\"color: #B48EAD\">1</span><span style=\"color: #ECEFF4\">]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> j</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #81A1C1\">*</span><span style=\"color: #D8DEE9FF\">return_size </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #B48EAD\">2</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> result</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<h2 id=\"javascript\" tabindex=\"-1\">JAVASCRIPT</h2>\n<pre class=\"shiki\" style=\"background-color: #2e3440ff\"><code><span class=\"line\"><span style=\"color: #616E88\">/**</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> * </span><span style=\"color: #ECEFF4\">@</span><span style=\"color: #8FBCBB\">param</span><span style=\"color: #616E88\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #616E88\">number[]</span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #616E88\"> </span><span style=\"color: #D8DEE9\">nums</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> * </span><span style=\"color: #ECEFF4\">@</span><span style=\"color: #8FBCBB\">param</span><span style=\"color: #616E88\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #616E88\">number</span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #616E88\"> </span><span style=\"color: #D8DEE9\">target</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> * </span><span style=\"color: #ECEFF4\">@</span><span style=\"color: #8FBCBB\">return</span><span style=\"color: #616E88\"> </span><span style=\"color: #ECEFF4\">{</span><span style=\"color: #616E88\">number[]</span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #616E88\"> */</span></span>\n<span class=\"line\"><span style=\"color: #81A1C1\">function</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #88C0D0\">twoSum</span><span style=\"color: #ECEFF4\">(</span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">target</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">m</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">=</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">new</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #8FBCBB\">Map</span><span style=\"color: #D8DEE9FF\">()</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #81A1C1\">for</span><span style=\"color: #D8DEE9FF\"> (</span><span style=\"color: #81A1C1\">const</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">in</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #D8DEE9FF\">) </span><span style=\"color: #ECEFF4\">{</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #81A1C1\">if</span><span style=\"color: #D8DEE9FF\"> (</span><span style=\"color: #D8DEE9\">m</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">has</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\">])) </span><span style=\"color: #81A1C1\">return</span><span style=\"color: #D8DEE9FF\"> [</span><span style=\"color: #D8DEE9\">m</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">get</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\">])</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #D8DEE9\">m</span><span style=\"color: #ECEFF4\">.</span><span style=\"color: #88C0D0\">set</span><span style=\"color: #D8DEE9FF\">(</span><span style=\"color: #D8DEE9\">target</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">-</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">nums</span><span style=\"color: #D8DEE9FF\">[</span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\">]</span><span style=\"color: #ECEFF4\">,</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">i</span><span style=\"color: #D8DEE9FF\">)</span><span style=\"color: #81A1C1\">;</span></span>\n<span class=\"line\"><span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"><span style=\"color: #ECEFF4\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span></code></pre>\n"}